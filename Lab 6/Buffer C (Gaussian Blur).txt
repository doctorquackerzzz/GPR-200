// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> Buffer C (Gaussian Blur)


//used https://www.shaderific.com/glsl-functions/ for assistance with some functions 
//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{

    
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;

    //kernels for 3x3 and 5x5
    float weights[3] = float[3](1.0, 2.0, 9.0);
    float weights2[6] = float[6](1.0, 4.0, 9.0, 16.0, 25.0, 36.0);

    //compilation of the columns in the 3x3 matrix 
    /*
    vec4 colOne = weights[0] * texture(iChannel0, vec2(uv.x - 10.0 * invX, uv.y));
    vec4 colTwo = weights[1] * texture(iChannel0, vec2(uv.x, uv.y));
    vec4 colThree = weights[2] * texture(iChannel0, vec2(uv.x + 10.0 * invX, uv.y));
    fragColor = fractionScale(16.0) * (colOne + colTwo + colThree); */
    
    //compilation of the columns in the 5x5 matrix
    vec4 firstCol = weights2[1] * texture(iChannel0, vec2(uv.x -12.0 * invX(iResolution), uv.y - 12.0 * invY(iResolution)));
    vec4 secondCol = weights2[2] * texture(iChannel0, vec2(uv.x - 6.0 * invX(iResolution), uv.y - 6.0 * invY(iResolution)));
    vec4 thirdCol = weights2[3] * texture(iChannel0, vec2(uv.x, uv.y));
    vec4 fourthCol = weights2[4] * texture(iChannel0, vec2(uv.x + 6.0 * invX(iResolution), uv.y + 6.0 * invY(iResolution)));
    vec4 fifthCol = weights2[5] * texture(iChannel0, vec2(uv.x +12.0 *invX(iResolution), uv.y + 12.0 * invY(iResolution)));
    fragColor = fractionScale(256.0) * (firstCol + secondCol + thirdCol + fourthCol + fifthCol);
    
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    //fragColor = texture(iChannel0, uv);
}